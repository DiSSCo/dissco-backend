/*
 * This file is generated by jOOQ.
 */
package eu.dissco.backend.database.jooq.tables.records;


import eu.dissco.backend.database.jooq.tables.MediaObject;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MediaObjectRecord extends UpdatableRecordImpl<MediaObjectRecord> implements Record5<String, String, String, String, JSONB> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.media_object.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.media_object.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.media_object.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.media_object.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.media_object.digital_specimen</code>.
     */
    public void setDigitalSpecimen(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.media_object.digital_specimen</code>.
     */
    public String getDigitalSpecimen() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.media_object.media_url</code>.
     */
    public void setMediaUrl(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.media_object.media_url</code>.
     */
    public String getMediaUrl() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.media_object.data</code>.
     */
    public void setData(JSONB value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.media_object.data</code>.
     */
    public JSONB getData() {
        return (JSONB) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, JSONB> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, String, JSONB> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MediaObject.MEDIA_OBJECT.ID;
    }

    @Override
    public Field<String> field2() {
        return MediaObject.MEDIA_OBJECT.TYPE;
    }

    @Override
    public Field<String> field3() {
        return MediaObject.MEDIA_OBJECT.DIGITAL_SPECIMEN;
    }

    @Override
    public Field<String> field4() {
        return MediaObject.MEDIA_OBJECT.MEDIA_URL;
    }

    @Override
    public Field<JSONB> field5() {
        return MediaObject.MEDIA_OBJECT.DATA;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getType();
    }

    @Override
    public String component3() {
        return getDigitalSpecimen();
    }

    @Override
    public String component4() {
        return getMediaUrl();
    }

    @Override
    public JSONB component5() {
        return getData();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getType();
    }

    @Override
    public String value3() {
        return getDigitalSpecimen();
    }

    @Override
    public String value4() {
        return getMediaUrl();
    }

    @Override
    public JSONB value5() {
        return getData();
    }

    @Override
    public MediaObjectRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public MediaObjectRecord value2(String value) {
        setType(value);
        return this;
    }

    @Override
    public MediaObjectRecord value3(String value) {
        setDigitalSpecimen(value);
        return this;
    }

    @Override
    public MediaObjectRecord value4(String value) {
        setMediaUrl(value);
        return this;
    }

    @Override
    public MediaObjectRecord value5(JSONB value) {
        setData(value);
        return this;
    }

    @Override
    public MediaObjectRecord values(String value1, String value2, String value3, String value4, JSONB value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MediaObjectRecord
     */
    public MediaObjectRecord() {
        super(MediaObject.MEDIA_OBJECT);
    }

    /**
     * Create a detached, initialised MediaObjectRecord
     */
    public MediaObjectRecord(String id, String type, String digitalSpecimen, String mediaUrl, JSONB data) {
        super(MediaObject.MEDIA_OBJECT);

        setId(id);
        setType(type);
        setDigitalSpecimen(digitalSpecimen);
        setMediaUrl(mediaUrl);
        setData(data);
    }
}
